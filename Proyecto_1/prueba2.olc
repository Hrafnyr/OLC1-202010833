inicio

ingresar _operaciones1Basica_      como numero con_valor 1+(1);               //2 el resultado
ingresar _operaciones1Basica2_      como numero con_valor _operaciones1Basica_+_operaciones1Basica_;               //               
ingresar _operaciones1Intermedia_  Como nUmero con_valor 15+(9*8)+200/8*3+9;  //171 el resultado
ingresar _operaciones1Avanzadas1_  ComO numeRo con_valor ((15+9)*8+200/8*3+9);   //291 el resultado
ingresar _operaciones1Avanzadas2_  coMo numero con_valor 30 potencia [22.2-2.2] + (2);   
ingresar _operaciones1Avanzadas3_  como nuMero con_valor (30 potencia [2]) + (2);   
ingresar _operaciones1Avanzadas4_  Como numeRo con_valor (30 potencia [10-8+9-4*2-1]) + (2) ;  
ingresar _operaciones1Avanzadas5_  coMo nUmero con_valor 30 potencia [10-8+9-4*2-1]) + (2) ;  
ingresar _operaciones1Avanzadas6_  Como numeRo con_valor (5*8) mod (1+5+6);   //4 es el resultado

ingresar _operacionRela1_ como BooleaNa con_valor 5+5>5;
ingresar _operacionRela3_ como booleana con_valor _operaciones1Basica_ mayor 8;
ingresar _operacionRela3_ como BooLeana con_valor (_operaciones1Basica_+6) Mayor_o_igual 8;
ingresar _operacionRela3_ como booleana con_valor (_operaciones1Basica_+6) menor_o_igual 8;
ingresar _operacionRela4_ como booleAna con_valor _operaciones1Basica_ es_iGual 8;
ingresar _operacionRela5_ como booleana con_valor _operaciones1Basica_ es_igual _operaciones1Basica_;
ingresar _operacionRela6_ como BooleanA con_valor _operaciones1Basica_ es_iguAl _operaciones1Basica_+1;
ingresar _operacionRela7_ como boolEana con_valor _operaciones1Basica_ es_igual (_operaciones1Basica_)*(8+5);
ingresar _operacionRela5_ como bOoleAna con_valor _operaciones1Basica_ es_difeErente _operaciones1Basica_;

imprimir_nl (_v3_);

si _v1_ es_igual _v2_ entonces
	imprimir_nl "Al parecer no funciona la asignacion";
	mientras not (_variable1_ mayor_o_igual 5*5+8/2) hacer
		imprimir _variable1_;
		_variable1_ -> _variable1_ + 1;
	fin_mientras
fin_si

si _v1_ es_igual _v2_ entonces
	imprimir_nl "no tiene que imprimir este mensaje";
	de_lo_contrario
	    imprimir "este print es un ejemplo";
fin_si

si _v1_ es_igual _v2_ entonces
	imprimir_nl "no tiene que imprimir este mensaje";
		o_si _v1_ es_igual 13 entonces
		    imprimir_nl "mensaje de prueba";
		o_si _v1_ es_igual 14 entonces
		    imprimir_nl "mensaje de prueba";
	de_lo_contrario
	    imprimir_nl "este print es un ejemplo";
fin_si


ingresar _varB_ como Boolean con_valor falso; 

if _varB_ entonces
	imprimir_nl "Estas definiendo bien los valores";
	ingresar _varaux_ como Numeror con_valor _variable1_ % 2;
	segun _varaux_ hacer
		¿0? entonces
			imprimir_nl "el valor es mayor a 0 y menos a 2";
		¿2? entonces
			imprimir_nl "el valor es mayor a 2";
	fin_segun
fin_si



/*Ahora empezamos con las funciones y procedimientos*/

metodo _potenciaManual_ con_parametros (_base_ Numero, _exponenete_ Numero)
	ingresar _i_ como Numero con_valor 0;
	ingresar _acumulado_ como Numero con_valor 0;
	para _i_->0 hasta _exponente_-1 hacer
		_acumulado_ -> _acumulado_ + _acumulado_;
	fin_para	
	imprimir _acumulado_;
	imprimir_nl " Esta es la potencia Manual";	
fin_metodo

funcion _potenciaFuncion_ Numero con_parametros (_base_ Numero, _exponente_ Numero) 
	ingresar _potencia_ como Numero con_valor _base_ potencia [_exponente_];
	retornar _potencia_;
fin_funcion

metodo _metodo1_
	imprimir_nl "estamos entrando al metodo 1";	
	ejecutar _potenciaManual_(3*1+4/2, 3+2);
	imprimir ejecutar _potenciaFuncion_(3*1+4/2, 3+2);
	imprimir_nl " Esta es la potencia Funcion";
fin_metodo

ejecutar _metodo1_();


fin
